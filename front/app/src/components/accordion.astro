---
import Versus from "./versus.astro";
import Arrow from "public/assets/img/icons/arrow-accordion.svg";
const { round, tID } = Astro.props;

let matches: any;
switch (round) {
  case "8":
    matches = await fetch(
      `https://torneos-manager.vercel.app/api/tournaments/couples/by8vos/${tID}`,
      {
        method: "POST",
      }
    ).then((response) => response.json());
    break;

  case "4":
    matches = await fetch(
      `https://torneos-manager.vercel.app/api/tournaments/couples/by4tos/${tID}`,
      {
        method: "POST",
      }
    ).then((response) => response.json());
    break;

  case "2":
    matches = await fetch(
      `https://torneos-manager.vercel.app/api/tournaments/couples/bySemis/${tID}`,
      {
        method: "POST",
      }
    ).then((response) => response.json());
    break;

  case "1":
    matches = await fetch(
      `https://torneos-manager.vercel.app/api/tournaments/couples/byFinal/${tID}`,
      {
        method: "POST",
      }
    ).then((response) => response.json());
    break;

  default:
    break;
}
---

{
  matches?.couples?.length > 0 &&
    matches?.couples?.find(
      (x: any) => x.couple1_id != null || x.couple2_id != null
    ) != undefined && (
      <div class="accordion-item aos-init aos-animate" data-aos="fade-up">
        <h2 class="accordion-header" id={`ppanelsStayOpen-heading-0-${round}`}>
          <button
            class={`accordion-button ${round == "1" ? "" : "collapsed"}`}
            type="button"
            data-bs-toggle="collapse"
            data-bs-target={`#ppanelsStayOpen-collapse-0-${round}`}
            aria-expanded="false"
            aria-controls={`ppanelsStayOpen-collapse-0-${round}`}
          >
            {round == "8" && "Octavos"}
            {round == "4" && "Cuartos"}
            {round == "2" && "Semis"}
            {round == "1" && "Final"}
            <img
              decoding="async"
              loading="lazy"
              src={Arrow.src}
              width="36"
              height="36"
              alt="arrow"
            />
          </button>
        </h2>
        <div
          id={`ppanelsStayOpen-collapse-0-${round}`}
          class={`accordion-collapse collapse ${round == "1" ? "show" : ""}`}
          aria-labelledby={`ppanelsStayOpen-heading-0-${round}`}
          style=""
        >
          <div class="accordion-body">
            {matches?.couples?.map((item: any) => (
              <>
                <Versus item={item} />
              </>
            ))}
          </div>
        </div>
      </div>
    )
}
